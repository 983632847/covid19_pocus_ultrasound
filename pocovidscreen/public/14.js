(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[14],{

/***/ "./resources/js/pages/Screen/ScreenVideoResult.js":
/*!********************************************************!*\
  !*** ./resources/js/pages/Screen/ScreenVideoResult.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar ScreenVideoResult = function ScreenVideoResult(_ref) {\n  var image = _ref.image,\n      data = _ref.data,\n      identifier = _ref.identifier;\n  var results = '';\n  var colorClass = '';\n  var url = '';\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    var formData = new FormData();\n    location.state.files.map(function (file) {\n      formData.append('image', file);\n      fetch('/pyapi/video_predict', {\n        method: 'POST',\n        body: formData\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        image.preview = URL.createObjectURL(image);\n        res = JSON.parse(data.result.split(\"\\n\")[0]);\n        url = data.result.split(\"\\n\")[1];\n        var maxValueIndex = res.indexOf(Math.max.apply(Math, _toConsumableArray(res)));\n        var probability = Math.round(res[maxValueIndex] * 100);\n\n        switch (maxValueIndex) {\n          case 0:\n            results = 'COVID-19 symptoms';\n            break;\n\n          case 1:\n            results = 'Pneumonia symptoms';\n            break;\n\n          case 2:\n            results = 'Healthy';\n            break;\n        }\n\n        if (probability >= 0 && probability < 50) {\n          colorClass = 'red';\n        } else if (probability >= 50 && probability < 80) {\n          colorClass = 'orange';\n        } else {\n          colorClass = 'green';\n        }\n\n        var tl = gsap__WEBPACK_IMPORTED_MODULE_1__[\"default\"].timeline();\n        Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n          var el = '#key-' + identifier;\n          tl.from(el, 1.2, {\n            y: 80,\n            opacity: 0,\n            ease: 'power4.out'\n          });\n        }, [identifier]);\n      });\n    });\n  }, [location]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    id: \"key-\".concat(identifier),\n    className: \"result \".concat(colorClass, \" d-md-flex mb-5\")\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"result-image\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", {\n    src: image.preview,\n    alt: \"Result for \".concat(image.path)\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"result-information align-self-center px-5 py-4 mt-md-0 w-100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"result-information-part image-title\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", null, \"Title\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, image.path)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"result-information-part symptoms\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", {\n    className: \"mt-4\"\n  }, \"Results\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", {\n    className: \"result-text\"\n  }, results)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"result-information-part video\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", {\n    className: \"mt-4\"\n  }, \"Heatmap\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"video\", {\n    width: \"400\",\n    controls: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"source\", {\n    src: url,\n    type: \"video/mp4\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"result-information-part probability no-border\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", {\n    className: \"mt-4\"\n  }, \"Probability\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"progress my-3\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"progress-size\",\n    style: {\n      width: \"\".concat(probability, \"%\")\n    }\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", {\n    className: \"result-probability\"\n  }, probability, \"%\"))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScreenVideoResult);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/Screen/ScreenVideoResult.js\n");

/***/ })

}]);