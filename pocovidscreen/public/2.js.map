{"version":3,"sources":["webpack:///./resources/js/pages/Screen/images/download.svg","webpack:///./resources/js/pages/Screen/images/download-dark.svg","webpack:///./resources/js/pages/Screen/Screen.js"],"names":["module","exports","Screen","isLight","useContext","AppContext","themeMode","downloadImage","downloadDark","download","thumb","display","borderRadius","marginBottom","marginRight","width","height","padding","overflow","boxSizing","thumbInner","minWidth","img","useState","files","setFiles","useEffect","forEach","file","URL","revokeObjectURL","preview","useDropzone","accept","noClick","multiple","noKeyboard","onDrop","acceptedFiles","map","Object","assign","createObjectURL","getRootProps","getInputProps","open","thumbs","style","key","name","src","configuration","appTitle","additionalClass","teaser","className","action","onSubmit","event","preventDefault","formData","FormData","append","fetch","method","body","then","data","json","console","log","type","onClick","flexDirection","flexWrap","marginTop"],"mappings":"0EAAAA,EAAOC,QAAU,yD,iBCAjBD,EAAOC,QAAU,8D,yoBCoIFC,UAzHA,WAEX,IACMC,EAAgC,UADtBC,qBAAWC,KACHC,UAEpBC,EAAgBC,IAChBL,IACAI,EAAgBE,KAGpB,IAOMC,EAAQ,CACVC,QAAS,cACTC,aAAc,EACdC,aAAc,EACdC,YAAa,EACbC,MAAO,IACPC,OAAQ,IACRC,QAAS,EACTC,SAAU,SACVC,UAAW,cAGTC,EAAa,CACfT,QAAS,OACTU,SAAU,EACVH,SAAU,UAGRI,EAAM,CACRX,QAAS,QACTI,MAAO,OACPC,OAAQ,QAtCK,IAyCSO,mBAAS,IAzClB,GAyCVC,EAzCU,KAyCHC,EAzCG,KA0CjBC,qBAAU,kBAAM,WACZF,EAAMG,SAAQ,SAAAC,GAAI,OAAIC,IAAIC,gBAAgBF,EAAKG,eAChD,CAACP,IAGJ,IA/CiB,EAgE2BQ,YAAY,CACpDC,OAAQ,mCACRC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,OAAQ,SAAAC,GACJb,EAASa,EAAcC,KAAI,SAAAX,GAAI,OAAIY,OAAOC,OAAOb,EAAM,CACnDG,QAASF,IAAIa,gBAAgBd,YAPlCe,EAhEU,EAgEVA,aAAcC,EAhEJ,EAgEIA,cAAeC,EAhEnB,EAgEmBA,KAY9BC,EAAStB,EAAMe,KAAI,SAAAX,GAAI,OACzB,yBAAKmB,MAAOrC,EAAOsC,IAAKpB,EAAKqB,MACzB,yBAAKF,MAAO3B,GACR,yBAAK8B,IAAKtB,EAAKG,QAASgB,MAAOzB,SAK3C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,2CAAiB6B,IAAcC,WAEnC,kBAAC,IAAD,CAAQC,gBAAgB,QAAQC,OAAO,2CACvC,yBAAKC,UAAU,aACX,0BAAMC,OAAO,iBAAiBC,SA5C3B,SAACC,GACZA,EAAMC,iBACN,IAAIC,EAAW,IAAIC,SACnBrC,EAAMe,KAAI,SAACX,GACPgC,EAASE,OAAO,QAASlC,GAEzBmC,MAAM,cAAe,CACjBC,OAAQ,OACRC,KAAML,IACPM,MAAK,SAACC,GACL,OAAOA,EAAKC,UACbF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,WAiCR,yBAAKZ,UAAU,OACX,yBAAKA,UAAU,yBACX,6BAASA,UAAU,+BACf,yBAAKL,IAAK3C,EAAegD,UAAU,cACnC,wBAASZ,EAAa,CAACY,UAAW,aAC9B,0BAAWX,KACX,4BAAQ2B,KAAK,SAAShB,UAAU,iCAAiCiB,QAAS3B,GAA1E,eAGA,mEAKhB,2BAAOU,UAAU,yBAAyBR,MAhGlC,CACpBpC,QAAS,OACT8D,cAAe,MACfC,SAAU,OACVC,UAAW,KA6FM7B,GAEL,yBAAKS,UAAU,OACX,yBAAKA,UAAU,yBACX,4BAAQA,UAAU,kDAAlB,eAKhB,yBAAKA,UAAU","file":"2.js","sourcesContent":["module.exports = \"/images/download.svg?4861d7cb6b1840333fd988f95ab0c6a0\";","module.exports = \"/images/download-dark.svg?870a552c6f977dfdd3671bb01e9bb11a\";","import React, {useContext, useEffect, useState} from 'react';\nimport Teaser from '../../components/Teaser/Teaser';\nimport Footer from '../../components/Footer/Footer';\nimport {Helmet} from 'react-helmet';\nimport configuration from '../../utils/constants';\nimport {useDropzone} from 'react-dropzone';\nimport Layout from '../Layout';\nimport download from './images/download.svg';\nimport downloadDark from './images/download-dark.svg';\nimport {AppContext} from '../../context/AppContext';\n\nconst Screen = () => {\n\n    const context = useContext(AppContext);\n    const isLight = context.themeMode === 'light';\n\n    let downloadImage = downloadDark;\n    if (isLight) {\n        downloadImage = download;\n    }\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 7,\n        marginBottom: 8,\n        marginRight: 8,\n        width: 150,\n        height: 150,\n        padding: 0,\n        overflow: 'hidden',\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const [files, setFiles] = useState([]);\n    useEffect(() => () => {\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n\n    const screen = (event) => {\n        event.preventDefault();\n        var formData = new FormData();\n        files.map((file) => {\n            formData.append('image', file);\n\n            fetch('/api/screen', {\n                method: 'POST',\n                body: formData\n            }).then((data) => {\n                return data.json();\n            }).then(data => {\n                console.log(data);\n            })\n        })\n    };\n\n    const {getRootProps, getInputProps, open} = useDropzone({\n        accept: 'image/png, image/jpeg, image/jpg',\n        noClick: true,\n        multiple: true,\n        noKeyboard: true,\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    });\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img src={file.preview} style={img}/>\n            </div>\n        </div>\n    ));\n\n    return (\n        <Layout>\n            <Helmet>\n                <title>Screen - {configuration.appTitle}</title>\n            </Helmet>\n            <Teaser additionalClass=\"small\" teaser=\"Select the images you want to analyses\"/>\n            <div className=\"container\">\n                <form action=\"/screen/result\" onSubmit={screen}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-10 offset-lg-1\">\n                            <section className=\"custom-dropzone text-center\">\n                                <img src={downloadImage} className=\"mt-3 mb-2\"/>\n                                <div {...getRootProps({className: 'dropzone'})}>\n                                    <input {...getInputProps()}/>\n                                    <button type=\"button\" className=\"button primary round my-4 px-5\" onClick={open}>\n                                        Choose file\n                                    </button>\n                                    <p>Or drag and drop some files here</p>\n                                </div>\n                            </section>\n                        </div>\n                    </div>\n                    <aside className=\"justify-content-center\" style={thumbsContainer}>\n                        {thumbs}\n                    </aside>\n                    <div className=\"row\">\n                        <div className=\"col-lg-10 offset-lg-1\">\n                            <button className=\"button primary round w-100 text-uppercase mt-4\">Confirm</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div className=\"spacer\"></div>\n        </Layout>\n    );\n};\n\nexport default Screen;\n"],"sourceRoot":""}