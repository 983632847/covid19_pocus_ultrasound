{"version":3,"sources":["webpack:///./resources/js/pages/Auth/SignIn.js"],"names":["SignIn","useContext","AuthContext","setCurrentUser","setToken","email","useInputValue","password","configuration","appTitle","additionalClass","teaser","className","onSubmit","event","preventDefault","login","value","then","user","token","error","json","errors","parseServerError","htmlFor","id","name","type","required","autoFocus","placeholder","bind","href","title"],"mappings":"wXA4DeA,UAlDA,WAAM,MAEgBC,qBAAWC,KAAvCC,EAFY,EAEZA,eAAgBC,EAFJ,EAEIA,SAEjBC,EAAQC,YAAc,SACtBC,EAAWD,YAAc,YAe7B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,+BAAQE,IAAcC,SAAtB,eAEJ,kBAAC,IAAD,CAAQC,gBAAgB,QAAQC,OAAO,YACvC,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6CACX,0BAAMC,SAtBL,SAACC,GAClBA,EAAMC,iBACNC,YAAM,CACFX,MAAOA,EAAMY,MACbV,SAAUA,EAASU,QACpBC,MAAK,YAAqB,IAAlBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACbhB,EAASgB,GACTjB,EAAegB,MALnB,OAMS,SAAAE,GACLA,EAAMC,OAAOJ,MAAK,gBAAEK,EAAF,EAAEA,OAAF,OAAclB,EAAMmB,iBAAiBD,UAabX,UAAU,YACpC,2BAAOa,QAAQ,SAAf,SACA,yBAAKb,UAAU,QACX,6BAAOc,GAAG,QAAQC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,EAACC,WAAS,EAAClB,UAAS,gBAAWP,EAAMgB,MAAQ,iBAAmB,IAAMU,YAAY,sBAAyB1B,EAAM2B,OACnK3B,EAAMgB,OAAS,uBAAGT,UAAU,wBAAyBP,EAAMgB,QAGjE,2BAAOI,QAAQ,YAAf,YACA,6BAAOE,KAAK,WAAWC,KAAK,WAAWhB,UAAU,aAAaiB,UAAQ,GAAKtB,EAASyB,OAEpF,uBAAGC,KAAK,oBAAR,oBACA,4BAAQL,KAAK,SAAShB,UAAU,kDAAhC,WACA,uBAAGA,UAAU,oBAAb,yBAAsD,uBAAGqB,KAAK,WAAWC,MAAM,qBAAzB,qBAAtD","file":"6.js","sourcesContent":["import React, {useContext} from 'react';\nimport {Route, Switch, useHistory, useLocation} from 'react-router-dom';\nimport Layout from '../Layout';\nimport {Helmet} from 'react-helmet';\nimport Teaser from '../../components/Teaser/Teaser';\nimport configuration from '../../utils/constants';\nimport {AuthContext} from '../../context/AuthContext';\nimport useInputValue from '../../utils/input-value';\nimport {login} from '../../api/auth';\n\nconst SignIn = () => {\n\n    let {setCurrentUser, setToken} = useContext(AuthContext);\n\n    let email = useInputValue('email');\n    let password = useInputValue('password');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        login({\n            email: email.value,\n            password: password.value\n        }).then(({ user, token }) => {\n            setToken(token);\n            setCurrentUser(user);\n        }).catch(error => {\n            error.json().then(({errors}) => email.parseServerError(errors));\n        });\n    };\n\n    return (\n        <Layout>\n            <Helmet>\n                <title>{configuration.appTitle} - Sign in</title>\n            </Helmet>\n            <Teaser additionalClass=\"small\" teaser=\"Sign in\"/>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n                        <form onSubmit={handleSubmit} className=\"form p-5\">\n                            <label htmlFor=\"email\">Email</label>\n                            <div className=\"mb-4\">\n                                <input id=\"email\" name=\"email\" type=\"email\" required autoFocus className={`w-100 ${email.error ? 'border-red-500' : ''}`} placeholder=\"example@domain.com\" {...email.bind}/>\n                                { email.error && <p className=\"text-red-500 text-xs\">{ email.error }</p> }\n                            </div>\n\n                            <label htmlFor=\"password\">Password</label>\n                            <input name=\"password\" type=\"password\" className=\"w-100 mb-2\" required {...password.bind}/>\n\n                            <a href=\"/forgot-password\">Forgot password?</a>\n                            <button type=\"submit\" className=\"button primary round w-100 text-uppercase mt-4\">Sign in</button>\n                            <p className=\"text-center mt-2\">New to PocovidScreen? <a href=\"/sign-up\" title=\"Create an account\">Create an account</a>.</p>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}