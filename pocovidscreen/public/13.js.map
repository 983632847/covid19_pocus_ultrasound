{"version":3,"sources":["webpack:///./resources/js/pages/Screen/ScreenVideoResult.js"],"names":["ScreenVideoResult","image","identifier","data","results","colorClass","url","useEffect","formData","FormData","location","state","files","map","file","append","fetch","method","body","then","json","preview","URL","createObjectURL","res","JSON","parse","result","split","maxValueIndex","indexOf","Math","max","probability","round","tl","gsap","timeline","el","from","y","opacity","ease","id","className","src","alt","path","width","controls","type","style"],"mappings":"k3BA2FeA,UAxFW,SAAC,GAA8B,IAA7BC,EAA6B,EAA7BA,MAAaC,GAAgB,EAAtBC,KAAsB,EAAhBD,YAEjCE,EAAU,GACVC,EAAa,GACbC,EAAM,GAoDV,OAlDAC,qBAAU,WACN,IAAIC,EAAW,IAAIC,SACnBC,SAASC,MAAMC,MAAMC,KAAI,SAACC,GACtBN,EAASO,OAAO,QAASD,GACzBE,MAAM,uBAAwB,CAC1BC,OAAQ,OACRC,KAAMV,IAETW,MAAK,SAAAhB,GAAI,OAAIA,EAAKiB,UAClBD,MAAK,SAAAhB,GACFF,EAAMoB,QAAUC,IAAIC,gBAAgBtB,GACpCuB,IAAMC,KAAKC,MAAMvB,EAAKwB,OAAOC,MAAM,MAAM,IACzCtB,EAAMH,EAAKwB,OAAOC,MAAM,MAAM,GAG9B,IAAMC,EAAgBL,IAAIM,QAAQC,KAAKC,IAAL,MAAAD,KAAI,EAAQP,OACxCS,EAAcF,KAAKG,MAA2B,IAArBV,IAAIK,IAEnC,OAAQA,GACJ,KAAK,EACDzB,EAAU,oBACV,MACJ,KAAK,EACDA,EAAU,qBACV,MACJ,KAAK,EACDA,EAAU,UAKdC,EADA4B,GAAe,GAAKA,EAAc,GACrB,MACNA,GAAe,IAAMA,EAAc,GAC7B,SAEA,QAGjB,IAAIE,EAAKC,IAAKC,WACd9B,qBAAU,WACN,IAAI+B,EAAK,QAAUpC,EACnBiC,EAAGI,KAAKD,EAAI,IAAK,CAACE,EAAG,GAAIC,QAAS,EAAGC,KAAM,iBAC5C,CAACxC,YAGb,CAACQ,WAMA,yBAAKiC,GAAE,cAASzC,GAAc0C,UAAS,iBAAYvC,EAAZ,oBACnC,yBAAKuC,UAAU,gBACX,yBAAKC,IAAK5C,EAAMoB,QAASyB,IAAG,qBAAgB7C,EAAM8C,SAEtD,yBAAKH,UAAU,gEACX,yBAAKA,UAAU,uCACX,qCACA,2BAAI3C,EAAM8C,OAEd,yBAAKH,UAAU,oCACX,wBAAIA,UAAU,QAAd,WACA,uBAAGA,UAAU,eAAexC,IAEhC,yBAAKwC,UAAU,iCACX,wBAAIA,UAAU,QAAd,WACA,2BAAOI,MAAM,MAAMC,UAAQ,GACvB,4BAAQJ,IAAKvC,EAAK4C,KAAK,gBAG/B,yBAAKN,UAAU,iDACX,wBAAIA,UAAU,QAAd,eACA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBAAgBO,MAAO,CAACH,MAAO,GAAF,OAAKf,YAAL,SAEhD,uBAAGW,UAAU,sBAAsBX,YAAnC","file":"13.js","sourcesContent":["import React, {useEffect} from 'react';\nimport gsap from \"gsap\";\n\nconst ScreenVideoResult = ({image, data, identifier}) => {\n\n    let results = '';\n    let colorClass = '';\n    let url = ''\n\n    useEffect(() => {\n        let formData = new FormData();\n        location.state.files.map((file) => {\n            formData.append('image', file);\n            fetch('/pyapi/video_predict', {\n                method: 'POST',\n                body: formData\n            })\n            .then(data => data.json())\n            .then(data => {\n                image.preview = URL.createObjectURL(image);\n                res = JSON.parse(data.result.split(\"\\n\")[0]);\n                url = data.result.split(\"\\n\")[1]\n                \n            \n                const maxValueIndex = res.indexOf(Math.max(...res));\n                const probability = Math.round(res[maxValueIndex] * 100);\n            \n                switch (maxValueIndex) {\n                    case 0:\n                        results = 'COVID-19 symptoms';\n                        break;\n                    case 1:\n                        results = 'Pneumonia symptoms';\n                        break;\n                    case 2:\n                        results = 'Healthy';\n                        break;\n                }\n            \n                if (probability >= 0 && probability < 50) {\n                    colorClass = 'red';\n                } else if (probability >= 50 && probability < 80) {\n                    colorClass = 'orange';\n                } else {\n                    colorClass = 'green';\n                }\n            \n                let tl = gsap.timeline();\n                useEffect(() => {\n                    let el = '#key-' + identifier;\n                    tl.from(el, 1.2, {y: 80, opacity: 0, ease: 'power4.out'})\n                }, [identifier]);\n            })\n        });\n    }, [location]);\n\n\n\n\n    return (\n        <div id={`key-${identifier}`} className={`result ${colorClass} d-md-flex mb-5`}>\n            <div className=\"result-image\">\n                <img src={image.preview} alt={`Result for ${image.path}`}/>\n            </div>\n            <div className=\"result-information align-self-center px-5 py-4 mt-md-0 w-100\">\n                <div className=\"result-information-part image-title\">\n                    <h3>Title</h3>\n                    <p>{image.path}</p>\n                </div>\n                <div className=\"result-information-part symptoms\">\n                    <h3 className=\"mt-4\">Results</h3>\n                    <p className=\"result-text\">{results}</p>\n                </div>\n                <div className=\"result-information-part video\">\n                    <h3 className=\"mt-4\">Heatmap</h3>\n                    <video width=\"400\" controls>\n                        <source src={url} type=\"video/mp4\"></source>\n                    </video>\n                </div>\n                <div className=\"result-information-part probability no-border\">\n                    <h3 className=\"mt-4\">Probability</h3>\n                    <div className=\"progress my-3\">\n                        <div className=\"progress-size\" style={{width: `${probability}%`}}></div>\n                    </div>\n                    <p className=\"result-probability\">{probability}&#37;</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ScreenVideoResult;\n"],"sourceRoot":""}