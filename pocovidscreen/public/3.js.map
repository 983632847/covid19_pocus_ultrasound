{"version":3,"sources":["webpack:///./resources/js/pages/Screen/images/download-dark.svg","webpack:///./resources/js/pages/Screen/images/download.svg","webpack:///./resources/js/pages/Screen/Screen.js"],"names":["module","exports","Screen","context","useContext","AppContext","history","useHistory","isLight","themeMode","downloadImage","downloadDark","download","useState","files","setFiles","useEffect","forEach","file","URL","revokeObjectURL","preview","useDropzone","accept","noClick","multiple","noKeyboard","onDrop","acceptedFiles","map","Object","assign","createObjectURL","getRootProps","getInputProps","open","thumbs","className","key","name","src","configuration","appTitle","additionalClass","teaser","onSubmit","event","preventDefault","push","pathname","state","type","onClick"],"mappings":"0EAAAA,EAAOC,QAAU,8D,iBCAjBD,EAAOC,QAAU,yD,woBC4FFC,UAjFA,WAEX,IAAMC,EAAUC,qBAAWC,KACrBC,EAAUC,cACVC,EAAgC,UAAtBL,EAAQM,UAEpBC,EAAgBC,IAChBH,IACAE,EAAgBE,KARH,QAWSC,mBAAS,IAXlB,GAWVC,EAXU,KAWHC,EAXG,KAYjBC,qBAAU,kBAAM,WACZF,EAAMG,SAAQ,SAAAC,GAAI,OAAIC,IAAIC,gBAAgBF,EAAKG,eAChD,CAACP,IAda,MAgB2BQ,YAAY,CACpDC,OAAQ,mCACRC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,OAAQ,SAAAC,GACJb,EAASa,EAAcC,KAAI,SAAAX,GAAI,OAAIY,OAAOC,OAAOb,EAAM,CACnDG,QAASF,IAAIa,gBAAgBd,YAPlCe,EAhBU,EAgBVA,aAAcC,EAhBJ,EAgBIA,cAAeC,EAhBnB,EAgBmBA,KAY9BC,EAAStB,EAAMe,KAAI,SAAAX,GAAI,OACzB,yBAAKmB,UAAU,QAAQC,IAAKpB,EAAKqB,MAC7B,yBAAKF,UAAU,eACX,yBAAKG,IAAKtB,EAAKG,eAa3B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,2CAAiBoB,IAAcC,WAEnC,kBAAC,IAAD,CAAQC,gBAAgB,QAAQC,OAAO,2CACvC,yBAAKP,UAAU,aACX,0BAAMQ,SAfG,SAACC,GAClBA,EAAMC,iBACNzC,EAAQ0C,KAAK,CACTC,SAAU,kBACVC,MAAO,CAACpC,MAAOA,OAYP,yBAAKuB,UAAU,OACX,yBAAKA,UAAU,yBACX,6BAASA,UAAU,gCACf,yBAAKG,IAAK9B,EAAe2B,UAAU,cACnC,wBAASJ,EAAa,CAACI,UAAW,aAC9B,0BAAWH,KACX,4BAAQiB,KAAK,SAASd,UAAU,iCAAiCe,QAASjB,GAA1E,eAGA,mEAKhB,2BAAOE,UAAU,2CACZD,GAEL,yBAAKC,UAAU,OACX,yBAAKA,UAAU,yBACX,4BAAQA,UAAU,kDAAlB,eAKhB,yBAAKA,UAAU","file":"3.js","sourcesContent":["module.exports = \"/images/download-dark.svg?870a552c6f977dfdd3671bb01e9bb11a\";","module.exports = \"/images/download.svg?4861d7cb6b1840333fd988f95ab0c6a0\";","import React, {useContext, useEffect, useState} from 'react';\nimport Teaser from '../../components/Teaser/Teaser';\nimport {Helmet} from 'react-helmet';\nimport configuration from '../../utils/constants';\nimport {useDropzone} from 'react-dropzone';\nimport Layout from '../Layout';\nimport download from './images/download.svg';\nimport downloadDark from './images/download-dark.svg';\nimport {AppContext} from '../../context/AppContext';\nimport {useHistory} from 'react-router-dom';\n\nconst Screen = () => {\n\n    const context = useContext(AppContext);\n    const history = useHistory();\n    const isLight = context.themeMode === 'light';\n\n    let downloadImage = downloadDark;\n    if (isLight) {\n        downloadImage = download;\n    }\n\n    const [files, setFiles] = useState([]);\n    useEffect(() => () => {\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    const {getRootProps, getInputProps, open} = useDropzone({\n        accept: 'image/png, image/jpeg, image/jpg',\n        noClick: true,\n        multiple: true,\n        noKeyboard: true,\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    });\n\n    const thumbs = files.map(file => (\n        <div className=\"thumb\" key={file.name}>\n            <div className=\"thumb-inner\">\n                <img src={file.preview}/>\n            </div>\n        </div>\n    ));\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        history.push({\n            pathname: '/screen/results',\n            state: {files: files}\n        })\n    };\n\n    return (\n        <Layout>\n            <Helmet>\n                <title>Screen - {configuration.appTitle}</title>\n            </Helmet>\n            <Teaser additionalClass=\"small\" teaser=\"Select the images you want to analyses\"/>\n            <div className=\"container\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-10 offset-lg-1\">\n                            <section className=\"file-upload-area text-center\">\n                                <img src={downloadImage} className=\"mt-3 mb-2\"/>\n                                <div {...getRootProps({className: 'dropzone'})}>\n                                    <input {...getInputProps()}/>\n                                    <button type=\"button\" className=\"button primary round my-4 px-5\" onClick={open}>\n                                        Choose file\n                                    </button>\n                                    <p>Or drag and drop some files here</p>\n                                </div>\n                            </section>\n                        </div>\n                    </div>\n                    <aside className=\"thumbs-container justify-content-center\">\n                        {thumbs}\n                    </aside>\n                    <div className=\"row\">\n                        <div className=\"col-lg-10 offset-lg-1\">\n                            <button className=\"button primary round w-100 text-uppercase mt-4\">Confirm</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div className=\"spacer\"></div>\n        </Layout>\n    );\n};\n\nexport default Screen;\n"],"sourceRoot":""}